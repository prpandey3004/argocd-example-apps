# Main ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-main-config
data:
  APP_MODE: "production"
  LOG_LEVEL: "debug"

---
# Additional ConfigMaps
{{- range $i := until 5 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-extra-config-{{ $i }}
data:
  SETTING_{{ $i }}: "value-{{ $i }}"
---
{{- end }}

# Secret
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
type: Opaque
data:
  DB_PASSWORD: {{ "supersecret" | b64enc }}

---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-service-account

---
# Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
rules:
- apiGroups: [""]
  resources: ["pods", "configmaps"]
  verbs: ["get", "list", "watch"]

---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-role-binding
subjects:
- kind: ServiceAccount
  name: app-service-account
roleRef:
  kind: Role
  name: app-role
  apiGroup: rbac.authorization.k8s.io

---
# Deployment with lots of replicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stateless-heavy-app
spec:
  replicas: 20
  selector:
    matchLabels:
      app: stateless-heavy-app
  template:
    metadata:
      labels:
        app: stateless-heavy-app
        tier: backend
    spec:
      serviceAccountName: app-service-account
      volumes:
      - name: temp-storage
        emptyDir: {}
      containers:
      - name: app
        image: gcr.io/my-project/stateless-app:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-main-config
        - secretRef:
            name: app-secret
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      initContainers:
      - name: init-db
        image: busybox
        command: ["sh", "-c", "echo Initializing... && sleep 5"]

---
# HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: stateless-heavy-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: stateless-heavy-app
  minReplicas: 5
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
# Multiple Services (internal + external)
apiVersion: v1
kind: Service
metadata:
  name: stateless-heavy-app-internal
spec:
  type: ClusterIP
  selector:
    app: stateless-heavy-app
  ports:
  - port: 80
    targetPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: stateless-heavy-app-lb
spec:
  type: LoadBalancer
  selector:
    app: stateless-heavy-app
  ports:
  - port: 80
    targetPort: 8080

---
# NetworkPolicy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-app-traffic
spec:
  podSelector:
    matchLabels:
      app: stateless-heavy-app
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: some-other-service
